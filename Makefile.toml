[tasks.set_swdio]
description = "Change the SWDIO pin used by the pico debugger."
command = "cargo"
args = ["run", "-p", "scripts", "--bin", "set_swdio", "--", "${@}"]
workspace = false


[tasks.build]
description = "Build crates given a DIR and CRATE in the env"
command = "cargo"
args = [
    "build",
    "--release",
    "-p",
    "${CRATE}",
    "--config",
    "${DIR}/${CRATE}/.cargo/config.toml",
]
workspace = false

[tasks.flash]
description = "Flash the given binary to picos connected to the given GPIO pins."
command = "cargo"
args = [
    "run",
    "-p",
    "scripts",
    "--bin",
    "flash",
    "${BINARY_NAME}",
    "${SWDIO_PINS}",
]
workspace = false

[tasks.build_and_flash_installation]
description = "Builds and flashes a binary for each pin, using the next configuration specified in the crate's Build.toml"
command = "cargo"
args = [
    "run",
    "-p",
    "scripts",
    "--bin",
    "build_and_flash",
    "${CRATE}",
    "${SWDIO_PINS}",
]
workspace = false

[tasks.flash_pico_on_breadboard]
extend = "build_and_flash_installation"
env = { "SWDIO_PINS" = "3,4,5", "CRATE" = "pico_on_breadboard" }

[tasks.build_flash_test]
extend = "build"
env = { "CRATE" = "flash_test", "DIR" = "experimental" }

[tasks.flash_test]
dependencies = ["build_flash_test"]
run_task = "flash"
env = { "SWDIO_PINS" = "3,4,5", "BINARY_NAME" = "flash_test" }
workspace = false

# Pico on breadboard installation
[tasks.build_pico_on_breadboard]
extend = "build"
env = { "CRATE" = "pico_on_breadboard", "DIR" = "installations" }

[tasks.pico_on_breadboard]
dependencies = ["build_pico_on_breadboard"]
run_task = "flash"
env = { "SWDIO_PINS" = "3,4,5", "BINARY_NAME" = "pico_on_breadboard" }
workspace = false

# double minsync installation
[tasks.build_double_minsync]
extend = "build"
env = { "CRATE" = "double_minsync", "DIR" = "installations" }

[tasks.double_minsync]
dependencies = ["build_double_minsync"]
run_task = "build_and_flash_installation"
env = { "SWDIO_PINS" = "3,4", "BINARY_NAME" = "double_minsync" }
workspace = false
